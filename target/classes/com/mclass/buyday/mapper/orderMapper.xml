<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mclass.buyday.mapper.orderMapper">

	<!-- Cart 관련 쿼리 시작 -->
	<select id="findCartGoods" resultType="String">
		SELECT CASE count(*) WHEN 0 THEN 'false' ELSE 'true' END FROM cart
		WHERE productId = #{productId} AND userid = #{userid}
	</select>
	
	<insert id="addGoodsInCart">
		<!-- INSERT 문 에서의 selectKey 의 BEFORE 사용 : 기존 cartid 의 최대값에 +1 을 해서 가져오기 -->
 		<selectKey resultType="String" keyProperty="cartid" order="BEFORE">
			SELECT MAX(cartid)+1 FROM cart
		</selectKey>
		INSERT INTO cart (cartid, userid, productId)
		VALUES (#{cartid}, #{userid}, #{productId})
	</insert>
	
	<select id="myCartList" resultType="cartDTO">
		SELECT * FROM cart WHERE userid = #{userid} ORDER BY regDate DESC <!-- 오래된 상품부터 정렬 -->
	</select>
	
	<!-- 배열이나 리스트 타입의 파라미터를 받는 경우 Mybatis 의 <foreach> 태그를 사용한다. -->
	<select id="myCartProductList" resultType="productDTO">
		SELECT * FROM product WHERE productId IN
		<!-- collection 에서 List 는 대문자로 적으면 안된다. -->
		<foreach collection="list" item="cartList" open="(" separator="," close=")">
			#{cartList.productId}
		</foreach>
	</select>
	
	<delete id="deleteCart">
		DELETE FROM cart WHERE userid = #{userid} AND productId = #{productId}
	</delete>
	<!-- Cart 관련 쿼리 끝 -->
	
	
	
	<!-- Order 관련 쿼리 시작 -->
	<insert id="insert">
		<!-- INSERT 문 에서의 selectKey 의 BEFORE 사용 : 기존 order_seq 의 최대값에 +1 을 해서 가져오기 -->
		<selectKey resultType="String" keyProperty="order_seq" order="BEFORE">
			SELECT MAX(order_seq)+1 FROM setOrder
		</selectKey>
		INSERT INTO setOrder (orderId, order_seq, order_quantity, selected_size, delivery_status, delivery_msg, amount, payment_method, orderDate,
		userid, username, email, tel, useraddress, postcode, point, productId, productName, price, category, productInfo)
		VALUES (#{orderId}, #{order_seq}, #{order_quantity}, #{selected_size}, #{delivery_status}, #{delivery_msg}, #{amount}, #{payment_method}, default,
		#{userid}, #{username}, #{email}, #{tel}, #{useraddress}, #{postcode}, #{point}, #{productId}, #{productName}, #{price}, #{category}, #{productInfo})
	</insert>
	
	<update id="minusProductStock">
		UPDATE product SET stock = stock - #{order_quantity} WHERE productId = #{productId}
	</update>
	
	<update id="plusMemberPoint">
		UPDATE member SET point = #{point} WHERE userid = #{userid}
	</update>
	
	<select id="list" resultType="orderDTO">
		SELECT * FROM setOrder WHERE userid = #{userid} ORDER BY orderDate
	</select>
	
	<select id="read" resultType="orderDTO">
		SELECT * FROM setOrder WHERE orderId = #{orderId}
	</select>
	
	<select id="orderAllList" resultType="orderDTO">
		SELECT * FROM setOrder
	</select>
	
	<update id="deliveryStart">
		UPDATE setOrder SET delivery_status = "1" WHERE orderId = #{orderId}
	</update>
	
	<update id="deliveryEnd">
		UPDATE setOrder SET delivery_status = "2" WHERE orderId = #{orderId}
	</update>
	<!-- Order 관련 쿼리 끝 -->

</mapper>